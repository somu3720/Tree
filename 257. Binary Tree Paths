class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        
        List<String> res = new ArrayList<>();
        
        if(root == null)
            return res;
        
        String curr_path = Integer.toString(root.val);
        
        if(root.left == null && root.right == null)
            res.add(curr_path);
        
        if(root.left != null)
            dfs(root.left, curr_path, res);
        
        if(root.right != null)
            dfs(root.right, curr_path, res);
        
        return res;
    }
    
    public void dfs(TreeNode node, String curr_path, List<String> res)
    {
        curr_path += "->" + node.val;
        
        if(node.left == null && node.right == null)
        { 
            res.add(curr_path);
            return;
        }
        
        if(node.left != null)
            dfs(node.left, curr_path, res);
        
        if(node.right != null)
            dfs(node.right, curr_path, res);
        
        
        
        
    }
}

//https://www.youtube.com/watch?v=H2D4HcVZq_g
