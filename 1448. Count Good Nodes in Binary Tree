/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int goodNodes(TreeNode root) {
        
        return countGoodNodes(root, root.val);
        
    }
    
    public int countGoodNodes(TreeNode node, int maxsofar)
    {
        int numofgoodnodes = 0;
        
        if(node != null)
        {
            if(node.val >= maxsofar)
            {
                maxsofar = node.val;
                numofgoodnodes++;
            }
        
        
        numofgoodnodes += countGoodNodes(node.left, maxsofar);
        
        numofgoodnodes += countGoodNodes(node.right, maxsofar);
            
        }
        
        return numofgoodnodes;
    }
}

//https://www.youtube.com/watch?v=ohHPgKoSS50&t=46s
